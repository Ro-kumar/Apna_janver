// Generated by view binder compiler. Do not edit!
package com.techvista.apnajanver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.techvista.apnajanver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WalletHistoryLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView asdfg;

  @NonNull
  public final TextView dabit;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView money;

  private WalletHistoryLayoutBinding(@NonNull LinearLayout rootView, @NonNull CardView asdfg,
      @NonNull TextView dabit, @NonNull TextView date, @NonNull ImageView image,
      @NonNull TextView money) {
    this.rootView = rootView;
    this.asdfg = asdfg;
    this.dabit = dabit;
    this.date = date;
    this.image = image;
    this.money = money;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WalletHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WalletHistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.wallet_history_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WalletHistoryLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.asdfg;
      CardView asdfg = ViewBindings.findChildViewById(rootView, id);
      if (asdfg == null) {
        break missingId;
      }

      id = R.id.dabit;
      TextView dabit = ViewBindings.findChildViewById(rootView, id);
      if (dabit == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.money;
      TextView money = ViewBindings.findChildViewById(rootView, id);
      if (money == null) {
        break missingId;
      }

      return new WalletHistoryLayoutBinding((LinearLayout) rootView, asdfg, dabit, date, image,
          money);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
